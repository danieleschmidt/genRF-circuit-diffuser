[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genrf-circuit-diffuser"
version = "0.1.0"
description = "Cycle-GAN & diffusion generator for analog/RF circuits with SPICE-in-the-loop optimization"
authors = [{name = "Daniel Schmidt", email = "daniel@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
]
dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "tqdm>=4.62.0",
    "plotly>=5.0.0",
    "dash>=2.0.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.10",
    "flake8>=5.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]
spice = [
    "PySpice>=1.5",
]

[project.urls]
Homepage = "https://github.com/yourusername/genRF-circuit-diffuser"
Documentation = "https://genrf-circuit.readthedocs.io"
Repository = "https://github.com/yourusername/genRF-circuit-diffuser"
Issues = "https://github.com/yourusername/genRF-circuit-diffuser/issues"

[project.scripts]
genrf = "genrf.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["genrf*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=genrf --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["genrf"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]