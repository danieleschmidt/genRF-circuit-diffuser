# CI/CD Pipeline Template
# Copy this to .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install NgSpice
      run: |
        sudo apt-get update
        sudo apt-get install -y ngspice

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,spice]"

    - name: Code formatting check
      run: |
        black --check genrf tests
        isort --check-only genrf tests

    - name: Linting
      run: |
        flake8 genrf tests
        mypy genrf

    - name: Run tests
      run: |
        pytest --cov=genrf --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] safety

    - name: Run Bandit security check
      run: bandit -r genrf -f json -o bandit-report.json

    - name: Check dependencies for vulnerabilities
      run: safety check --json --output safety-report.json

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install NgSpice and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ngspice
        python -m pip install --upgrade pip
        pip install -e ".[dev,spice]"

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --timeout=300

    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: |
          test-results/
          generated_circuits/